plugins {
  //id 'net.minecrell.licenser' version '0.3'
  id 'org.ajoberstar.grgit' version '2.3.0'
  //id 'com.github.johnrengelman.shadow' version '2.0.4'
}

apply plugin: 'java'
apply plugin: 'maven-publish'

group = 'net.minecraftforge.gradle'
version = gitVersion()
def gitVersion() {
    def desc = grgit.describe(longDescr: true).split('-') as List
    def hash = desc.remove(desc.size() - 1)
    def offset = desc.remove(desc.size() - 1)
    def tag = desc.join('-')
    def branch = grgit.branch.current().name    
    return "${tag}.${offset}" //${t -> if (branch != 'master') t << '-' + branch}"
}

sourceSets {
    common
    mcp
    patcher
    forgedev
}

configurations {
    mcpImplementation.extendsFrom commonImplementation
    patcherImplementation.extendsFrom commonImplementation
    forgedevImplementation.extendsFrom patcherImplementation
    compile.extendsFrom mcpImplementation, patcherImplementation, forgedevImplementation
}

jar {
    from sourceSets.common.output
    from sourceSets.mcp.output
    from sourceSets.patcher.output
    from sourceSets.forgedev.output
}

repositories {
    jcenter()
    maven { url = 'http://files.minecraftforge.net/maven' }
}

dependencies {
    commonImplementation gradleApi()
    commonImplementation 'com.cloudbees:diff4j:1.2'
    commonImplementation 'commons-io:commons-io:2.4'
    commonImplementation 'com.github.jponge:lzma-java:1.3' // replaces the LZMA binary
    commonImplementation 'com.nothome:javaxdelta:2.0.1' // GDIFF implementation for BinPatches
    commonImplementation 'com.google.code.gson:gson:2.8.5'
    commonImplementation 'com.google.guava:guava:26.0-jre'
    commonImplementation 'de.siegmar:fastcsv:1.0.2'
    commonImplementation 'net.minecraftforge:Srg2Source:4.2.+'
    commonImplementation 'com.amadornes:artifactural:1.0.+'

    mcpImplementation sourceSets.common.output
    patcherImplementation sourceSets.mcp.output
    patcherImplementation sourceSets.common.output
    forgedevImplementation sourceSets.mcp.output
    forgedevImplementation sourceSets.common.output
    forgedevImplementation sourceSets.patcher.output
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            if (project.hasProperty('forgeMavenPassword')) {
                credentials {
                    username project.properties.forgeMavenUser
                    password project.properties.forgeMavenPassword
                }
                url 'http://files.minecraftforge.net/maven/manage/upload'
            } else {
                url 'file://' + rootProject.file('repo').getAbsolutePath()
            }
        }
    }
}